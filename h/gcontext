/*******************************************************************
 * File:     gcontext
 * Purpose:  Graphics context operations
 * Author:   Justin Fletcher
 * Date:     11 Jun 2006
 ******************************************************************/

#ifndef GCONTEXT_H
#define GCONTEXT_H

#define FONTATTRIB_ALIGN_HLEFT   (0<<0)
#define FONTATTRIB_ALIGN_HCENTRE (1<<0)
#define FONTATTRIB_ALIGN_HRIGHT  (2<<0)
#define FONTATTRIB_ALIGN_HMASK   (3<<0)
#define FONTATTRIB_ALIGN_VTOP    (0<<2)
#define FONTATTRIB_ALIGN_VCENTRE (1<<2)
#define FONTATTRIB_ALIGN_VBOTTOM (2<<2)
#define FONTATTRIB_ALIGN_VMASK   (3<<2)
#define FONTATTRIB_UNDERLINE     (1<<4)

#define COLOUR_NONE (0xFFFFFFFFlu)
#define COLOUR_RGB(r,g,b) (((r)<<8) | ((g)<<16) | ((b)<<24))

typedef struct coords_s {
  int x;
  int y;
} coords_t;

typedef struct gcontext_s {
  void (*rectangle_fill)(unsigned long colour,
                         int x0, int y0, int x1, int y1);
  void (*rectangle_outline)(unsigned long colour,
                            int x0, int y0, int x1, int y1);

  void (*triangle_fill)(unsigned long colour,
                        int x0, int y0, int x1, int y1, int x2, int y2);

  void (*line_start)(unsigned long line_colour);
  void (*line_line)(int x0, int y0, int x1, int y1);
  void (*line_end)(void);

  void (*fill_start)(unsigned long fill_colour);
  void (*fill_move)(int x, int y);
  void (*fill_line)(int x, int y);
  void (*fill_close)(void);
  void (*fill_end)(void);

  void *(*font_find)(const char *name, int xsize, int ysize);
  void (*font_lose)(void *handle);
  coords_t (*font_paint)(void *handle,
                         int x, int y, int x1, int y1,
                         const char *str, int strsize,
                         unsigned long bg, unsigned long fg,
                         unsigned long attrib);
} gcontext_t;

extern gcontext_t gcontext;

#define rect_fillrgb(r,g,b, x0, y0, x1, y1) \
                  (gcontext.rectangle_fill)( COLOUR_RGB(r,g,b), \
                                             x0,y0,x1,y1)
#define rect_fill(col, x0, y0, x1, y1) \
                  (gcontext.rectangle_fill)(col,x0,y0,x1,y1)
#define rect_outline(col, x0, y0, x1, y1) \
                     (gcontext.rectangle_outline)(col,x0,y0,x1,y1)

#define tri_fill(col, x0, y0, x1, y1, x2, y2) \
                  (gcontext.triangle_fill)(col,x0,y0,x1,y1,x2,y2)

#define line_start(col) \
                  (gcontext.line_start)(col)
#define line(x0,y0,x1,y1) \
                  (gcontext.line_line)(x0,y0,x1,y1)
#define line_end() \
                  (gcontext.line_end)()

#define fill_start(col) \
                  gcontext.fill_start ? (gcontext.fill_start)(col),1 : 0
#define fill_move(x,y) \
                  (gcontext.fill_move)(x,y)
#define fill_line(x,y) \
                  (gcontext.fill_line)(x,y)
#define fill_close() \
                  (gcontext.fill_close)()
#define fill_end() \
                  (gcontext.fill_end)()

#define font_find(name,xsize,ysize) \
                  (gcontext.font_find)(name, xsize, ysize)
#define font_lose(handle) \
                  (gcontext.font_lose)(handle)
#define font_paint(handle, x, y, x1, y1, str, strsize, bg, fg, attr) \
                  (gcontext.font_paint)(handle,x,y,x1,y1,str,strsize,bg,fg,attr)

/*************************************************** Gerph *********
 Function:     gcontext_initvdu
 Description:  Initialise the graphics context for the VDU system
 Parameters:   fonts = 1 if we should use fonts
 Returns:      none
 ******************************************************************/
void gcontext_initvdu(int fonts);

#endif
