/*******************************************************************
 * File:     textblock
 * Purpose:  Rendering of text using the font functions into a wrapped
 *           block
 * Author:   Justin Fletcher
 * Date:     13 Sep 2020
 ******************************************************************/

#ifndef TEXTBLOCK_H
#define TEXTBLOCK_H

typedef struct textblock_s *textblock_t;

/* How to create the block */
#define TBCREATE_DEFAULT_SPACING (0x10000) /* 100% */
#define TBCREATE_EXTRA_SPACING   (0x13333) /* 120% */

/* How to clear the text block to a known state */
#define TBCLEAR_TEXTMASK    (3ul<<0)    /* Clear the text to the top-left of the region */
#define TBCLEAR_TEXTTOP     (1ul<<0)    /* Clear the text to the top-left of the region */
#define TBCLEAR_TEXTNEWLINE (2ul<<0)    /* Clear the text for a new line (moves to the left of a new line) */
#define TBCLEAR_SIZING      (1ul<<2)    /* Clear the sizings, so we calculate line sizings afresh */
#define TBCLEAR_COVERED     (1ul<<3)    /* Clear the covered bounds */

/* How to render text */
#define TBADD_UNDERLINE     (1ul<<0)    /* Whether we draw an underline or not */
#define TBADD_STRIKETHROUGH (1ul<<1)    /* Whether we draw a strike through or not */
#define TBADD_PAINT         (1ul<<16)   /* Whether we're painting, or just calculating the sizes */


/*************************************************** Gerph *********
 Function:      textblock_create
 Description:   Create a new text block for wrapping text
 Parameters:    x0, y0, y1, y1 = box inside which we'll plot
                line_spacing = 16.16 value for line spacing as a portion of line height
 Returns:       textblock_t handle for manipulating the text region
 ******************************************************************/
textblock_t textblock_create(int x0, int y0, int x1, int y1,
                             unsigned long line_spacing);


/*************************************************** Gerph *********
 Function:      textblock_clear
 Description:   Clear the text block, resetting the block to the top
                left corner.
 Parameters:    textblock = the handle to work on
                flags = TBCLEAR_* flags
 Returns:       none
 ******************************************************************/
void textblock_clear(textblock_t textblock, unsigned long flags);


/*************************************************** Gerph *********
 Function:      textblock_add
 Description:   Add a string to the wrap area
 Parameters:    textblock = the handle to work on
                font = the font handle to use
                text = the text string to add
                bg,fg = colour to use
                flags = TBADD_* flags
 Returns:       number of bytes written
 ******************************************************************/
int textblock_add(textblock_t textblock, void *font,
                  const char *text,
                  unsigned long bg, unsigned long fg,
                  unsigned long flags);


/*************************************************** Gerph *********
 Function:      textblock_covered
 Description:   Return the extent covered by the text that has been
                added.
 Parameters:    textblock = the handle to work on
                bbox-> the bbox to fill in
 Returns:       none
 ******************************************************************/
void textblock_covered(textblock_t textblock, bbox_t *bbox);


/*************************************************** Gerph *********
 Function:      textblock_position
 Description:   Return the coordinates of the output position
 Parameters:    textblock = the handle to work on
 Returns:       coordinates of the position (ie the baseline of the
                next write)
 ******************************************************************/
coords_t textblock_position(textblock_t textblock);


/*************************************************** Gerph *********
 Function:      textblock_extent
 Description:   Return the extent of the output; the bottom y position
                of the region, to use in a new block.
 Parameters:    textblock = the handle to work on
 Returns:       y-position suitable for a new text block
 ******************************************************************/
int textblock_extent(textblock_t textblock);


/*************************************************** Gerph *********
 Function:      textblock_lineheight
 Description:   Return the height of a line.
 Parameters:    textblock = the handle to work on
 Returns:       height of the line
 ******************************************************************/
int textblock_lineheight(textblock_t textblock);


/*************************************************** Gerph *********
 Function:      textblock_linespacing
 Description:   Return the spacing of a line.
 Parameters:    textblock = the handle to work on
 Returns:       height of the line + spacing
 ******************************************************************/
int textblock_linespacing(textblock_t textblock);


/*************************************************** Gerph *********
 Function:      textblock_space
 Description:   Add a space in the text for a specific size.
                Might be used to leave a gap for an image.
 Parameters:    textblock = the handle to work on
                width = width of the space to create
                height = height of the space to create (may push the
                ascent higher)
                posp-> where to store the coords of the bottom left
 Returns:       1 if successful, 0 if there is no room left
 ******************************************************************/
int textblock_space(textblock_t textblock, int width, int height,
                    coords_t *posp);


#endif
