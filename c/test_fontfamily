#include <assert.h>
#include <stdlib.h>
#include <stdio.h>

#include "gcontext.h"
#include "textblock.h"
#include "fontfamily.h"


#define FONT_SIZE 22*16
#define FONT_NAME "HirukoPro.Book"
//#define FONT_NAME "Optima.Regular"
#define FONT_ALTNAME "Homerton.Medium"

void test_create(void)
{
    fontfamily_t family;

    /* We should be able to find the font */
    family = fontfamily_create("Homerton.Medium", 16*16, 16*16);
    assert(family != NULL && "Should be able to create Homerton.Medium family");
    fontfamily_destroy(family);

    /* We should be able to report a non-existant font */
    family = fontfamily_create("NonExistant.Font.Name", 16*16, 16*16);
    assert(family == NULL && "Should not be able to find non-existant font family");
}


int main(int argc, char *argv[])
{
    fontfamily_t family;
    textblock_t textblock;
    int ytop = 480;
    int ytexttop = ytop - 16;
    int ylimit = ytexttop - 256;
    int i;

    gcontext_initvdu(1);

    test_create();

    rect_fill(0x4444FF00, 64, 64-16,  640, ytop);
    rect_outline(0x44440000, 64+16, ylimit,  640-16, ytexttop);

    family = fontfamily_create("Homerton.Medium", FONT_SIZE, FONT_SIZE);
    assert(family != NULL && "Should be able to create Homerton.Medium family");
#if 1
    if (fontfamily_populate(family))
    {
        printf("Failed to initialise font family\n");
        exit(1);
    }
#else
    fontfamily_set_style(family, FONTFAMILY_STYLE_SLANT, "Homerton.Medium.Oblique");
    fontfamily_set_style(family, FONTFAMILY_STYLE_BOLD, "Homerton.Bold");
    fontfamily_set_style(family, FONTFAMILY_STYLE_BOLDSLANT, "Homerton.Bold.Oblique");
#endif

    textblock = textblock_create(64+16, ylimit,  640-16, ytexttop,
                                 TBCREATE_SPACING_DEFAULT);

    for (i=0; i < 2 ; i++)
    {
        unsigned long flags = (i==0) ? 0 : TBADD_PAINT;
        textblock_add(textblock,
                      fontfamily_get_font(family, FONTFAMILY_STYLE_BASE),
                      "Regular ",
                      0x4444FF00, 0xFFFFFF00, flags | TBADD_UNDERLINE);

        textblock_add(textblock,
                      fontfamily_get_font(family, FONTFAMILY_STYLE_SLANT),
                      "Slant ",
                      0x4444FF00, 0xFFFFFF00, flags | TBADD_UNDERLINE);

        textblock_add(textblock,
                      fontfamily_get_font(family, FONTFAMILY_STYLE_BOLD),
                      "Bold ",
                      0x4444FF00, 0xFFFFFF00, flags | TBADD_UNDERLINE);

        textblock_add(textblock,
                      fontfamily_get_font(family, FONTFAMILY_STYLE_BOLDSLANT),
                      "BoldSlant ",
                      0x4444FF00, 0xFFFFFF00, flags | TBADD_UNDERLINE);

        textblock_clear(textblock, TBCLEAR_TEXTTOP | TBCLEAR_COVERED);
    }

    fontfamily_destroy(family);

    getchar();
}
